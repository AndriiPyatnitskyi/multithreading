package threadLocal;

public class ThreadLocalCheatSheet {

    /**
     * ‚úÖ –©–æ —Ç–∞–∫–µ ThreadLocal?
     *
     * ThreadLocal<T> ‚Äî —Ü–µ –∑–º—ñ–Ω–Ω–∞, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—ó –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –æ–∫—Ä–µ–º–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É.
     * –¢–æ–±—Ç–æ –∫–æ–∂–µ–Ω –ø–æ—Ç—ñ–∫ –º–∞—î —Å–≤–æ—é –≤–ª–∞—Å–Ω—É –∫–æ–ø—ñ—é –∑–Ω–∞—á–µ–Ω–Ω—è.
     *
     * –û—Å–Ω–æ–≤–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
     * - –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –ø–æ—Ç–æ–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, userId, transactionId)
     * - —É–Ω–∏–∫–Ω–µ–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó, –±–æ –¥–∞–Ω—ñ –Ω–µ —Å–ø—ñ–ª—å–Ω—ñ
     * - –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö —É –º–µ–∂–∞—Ö –æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É
     */

    // –ü—Ä–æ—Å—Ç–∏–π ThreadLocal –±–µ–∑ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    private static ThreadLocal<Integer> threadLocalId = new ThreadLocal<>();

    // ThreadLocal –∑ –ø–æ—á–∞—Ç–∫–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º
    private static ThreadLocal<String> defaultName = ThreadLocal.withInitial(() -> "Guest");

    public static void main(String[] args) {
        /**
         * üîß threadLocal.set(value) ‚Äî –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É
         * üîß threadLocal.get() ‚Äî –æ—Ç—Ä–∏–º—É—î –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É
         * üîß threadLocal.remove() ‚Äî –æ—á–∏—â—É—î –∑–Ω–∞—á–µ–Ω–Ω—è (–≤–∞–∂–ª–∏–≤–æ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è memory leak)
         */

        Runnable task = () -> {
            int threadId = (int) (Math.random() * 1000);

            threadLocalId.set(threadId); // –∫–æ–∂–µ–Ω –ø–æ—Ç—ñ–∫ –æ—Ç—Ä–∏–º—É—î –≤–ª–∞—Å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            System.out.println(Thread.currentThread().getName() + " ‚Üí ID: " + threadLocalId.get());

            // –ü—Ä–∏–∫–ª–∞–¥ —ñ–∑ ThreadLocal.withInitial
            System.out.println(Thread.currentThread().getName() + " ‚Üí defaultName: " + defaultName.get());

            threadLocalId.remove();  // –æ—á–∏—â–µ–Ω–Ω—è –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
            defaultName.remove();
        };

        Thread t1 = new Thread(task, "Thread-A");
        Thread t2 = new Thread(task, "Thread-B");

        t1.start();
        t2.start();

        /**
         * ‚ö†Ô∏è –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏:
         *
         * ‚ùå Memory Leak ‚Äî —è–∫—â–æ –Ω–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ .remove() —É –¥–æ–≤–≥–æ–∂–∏–≤—É—á–∏—Ö –ø–æ—Ç–æ–∫–∞—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É thread pool)
         * ‚ùå –ó–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –º—ñ–∂ –ø–æ—Ç–æ–∫–∞–º–∏
         * ‚ùå –ù–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö callback-—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, CompletableFuture)
         */

        /**
         * üìå ThreadLocal vs static:
         *
         * static                      | ThreadLocal
         * ----------------------------|-------------------------------
         * –ó–∞–≥–∞–ª—å–Ω–µ –¥–ª—è –≤—Å—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤   | –£–Ω—ñ–∫–∞–ª—å–Ω–µ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø–æ—Ç–æ–∫—É
         * –ü–æ—Ç—Ä–µ–±—É—î —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó      | –ù–µ –ø–æ—Ç—Ä–µ–±—É—î
         * –î–∞–Ω—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–º—ñ–Ω–µ–Ω—ñ    | –î–∞–Ω—ñ —Ç—ñ–ª—å–∫–∏ —É –≤–ª–∞—Å–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ
         */
    }
}
