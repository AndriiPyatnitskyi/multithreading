package wait_notify;

class Process {

    /**
     * –ú–µ—Ç–æ–¥ produce() –±–ª–æ–∫—É—î –º–æ–Ω—ñ—Ç–æ—Ä this, –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –≤–∏–∫–ª–∏–∫–∞—î wait(),
     * —â–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ø–æ—Ç—ñ–∫ —É —Å—Ç–∞–Ω –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è (releases lock).
     */
    public void produce() throws InterruptedException {
        synchronized (this) {
            System.out.println("Running produce method...");

            /**
             * –ü–æ—Ç—ñ–∫ –≤—ñ–¥–¥–∞—î –º–æ–Ω—ñ—Ç–æ—Ä this —ñ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É —á–µ—Ä–≥—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è.
             * –í—ñ–Ω –±—É–¥–µ "—Ä–æ–∑–±—É–¥–∂–µ–Ω–∏–π", –∫–æ–ª–∏ —ñ–Ω—à–∏–π –ø–æ—Ç—ñ–∫ –≤–∏–∫–æ–Ω–∞—î notify().
             */
            wait();

            // –ü–æ—Ç—ñ–∫ –ø—Ä–æ–∫–∏–Ω—É–≤—Å—è –ø—ñ—Å–ª—è notify(), –∑–Ω–æ–≤—É –æ—Ç—Ä–∏–º–∞–≤ –º–æ–Ω—ñ—Ç–æ—Ä this
            System.out.println("Again in the produce method...");
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ consume() ‚Äî —ñ–º—ñ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–∫–∏, —è–∫–∞ "—Ä–æ–∑–±—É–¥–∏—Ç—å" –ø–æ—Ç—ñ–∫ produce().
     */
    public void consume() throws InterruptedException {
        // –ó–∞—Ç—Ä–∏–º–∫–∞, —â–æ–± –¥–∞—Ç–∏ —à–∞–Ω—Å t1 —É–≤—ñ–π—Ç–∏ –≤ wait()
        Thread.sleep(1000);

        synchronized (this) {
            System.out.println("Running consume method...");

            /**
             * notify() –ø—Ä–æ–±—É–¥–∂—É—î –æ–¥–∏–Ω –ø–æ—Ç—ñ–∫, —â–æ —á–µ–∫–∞—î –Ω–∞ —Ü—å–æ–º—É –æ–±'—î–∫—Ç—ñ.
             * –ê–ª–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—î –º–æ–Ω—ñ—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ ‚Äî –ø—Ä–æ–±—É–¥–∂–µ–Ω–∏–π –ø–æ—Ç—ñ–∫ –º—É—Å–∏—Ç—å –¥–æ—á–µ–∫–∞—Ç–∏—Å—å,
             * –ø–æ–∫–∏ this –±—É–¥–µ –∑–≤—ñ–ª—å–Ω–µ–Ω–æ.
             */
            notify();
        }
    }

    /*
     * –í–ê–ñ–õ–ò–í–û:
     * 1) wait() —ñ notify() –ú–û–ñ–ù–ê –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –õ–ò–®–ï –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ synchronized –±–ª–æ–∫—É –∞–±–æ –º–µ—Ç–æ–¥—É,
     *    —ñ–Ω–∞–∫—à–µ –≤–∏–Ω–∏–∫–∞—î IllegalMonitorStateException.
     *
     * 2) –Ø–∫—â–æ –≤ —á–µ—Ä–∑—ñ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–∞ –ø–æ—Ç–æ–∫—ñ–≤ ‚Äî notify() –ø—Ä–æ–±—É–¥–∂—É—î –≤–∏–ø–∞–¥–∫–æ–≤–∏–π.
     *    –î–ª—è –ø—Ä–æ–±—É–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è notifyAll().
     *
     * 3) notify() –ù–ï –ø–µ—Ä–µ–¥–∞—î –º–æ–Ω—ñ—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ;
     *    –ø—Ä–æ–±—É–¥–∂–µ–Ω–∏–π –ø–æ—Ç—ñ–∫ –∑–º–æ–∂–µ –≤–∑—è—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä –ª–∏—à–µ –ø—ñ—Å–ª—è —Ç–æ–≥–æ,
     *    —è–∫ –ø–æ—Ç—ñ–∫, —â–æ –≤–∏–∫–ª–∏–∫–∞–≤ notify(), –∑–≤—ñ–ª—å–Ω–∏—Ç—å synchronized –±–ª–æ–∫.
     */

    /*
     * üîç –ü–û–Ø–°–ù–ï–ù–ù–Ø:
     * –ú–µ—Ç–æ–¥           | –û–ø–∏—Å
     * -------------------------------------------------------
     * wait()          | –ü–æ—Ç—ñ–∫ —á–µ–∫–∞—î (–≤—ñ–¥–¥–∞—î –º–æ–Ω—ñ—Ç–æ—Ä), –¥–æ–∫–∏ –π–æ–≥–æ –Ω–µ "—Ä–æ–∑–±—É–¥—è—Ç—å" notify()/notifyAll()
     * notify()        | –ü—Ä–æ–±—É–¥–∂—É—î –æ–¥–∏–Ω –∑ –ø–æ—Ç–æ–∫—ñ–≤, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞–≤ wait() –Ω–∞ —Ü—å–æ–º—É –æ–±‚Äô—î–∫—Ç—ñ
     * synchronized    | –ë–ª–æ–∫ —á–∏ –º–µ—Ç–æ–¥, –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è wait/notify,
     *                 | —ñ–Ω–∞–∫—à–µ –±—É–¥–µ IllegalMonitorStateException
     */
}

public class Main {

    public static void main(String[] args) {

        Process process = new Process();

        // –ü–æ—Ç—ñ–∫, —è–∫–∏–π –≤–∏–∫–æ–Ω—É—î produce() ‚Äî –≤–∏–∫–ª–∏–∫–∞—î wait()
        Thread t1 = new Thread(() -> {
            try {
                process.produce();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
        });

        // –ü–æ—Ç—ñ–∫, —è–∫–∏–π –≤–∏–∫–æ–Ω—É—î consume() ‚Äî –≤–∏–∫–ª–∏–∫–∞—î notify()
        Thread t2 = new Thread(() -> {
            try {
                process.consume();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
        });

        // –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∏ –ø–æ—Ç–æ–∫—ñ–≤. –ù–µ –≥–∞—Ä–∞–Ω—Ç—É—é—Ç—å –ø–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
        t1.setPriority(10);
        t2.setPriority(1);

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±–∏–¥–≤–∞ –ø–æ—Ç–æ–∫–∏
        t1.start();
        t2.start();
    }
}
